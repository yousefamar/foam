---
title: Yousef Amar
layout: base
public: true
---

<style>
  html, body {
    height: 100%;
  }
  #scene {
    overflow: hidden;
  }
  .fullscreen {
    width: 100%;
    height: 100%;
  }
  .center {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  .title {
    color: var(--text-bright);
    font-size: 2.5em;
    margin: 0;
    font-weight: bold;
    font-variant: small-caps;
    text-align: center;
    white-space: nowrap;
  }
  .subtitle {
    color: var(--text-muted);
    font-size: 1em;
    text-align: center;
    white-space: nowrap;
  }
  .icon-links {
    margin-top: 13rem;
    pointer-events: all;
    font-size: 2.5em;
    text-align: center;
  }
  a[href^=mailto\:]:before {
    content: "";
  }
  .vignette {
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
    background: radial-gradient(transparent 50%, rgba(0, 0, 0, 0.6));
  }
  @media (min-width: 550px) {
    .title {
      font-size: 4em;
    }
    .subtitle {
      font-size: 1.5em;
    }
    .icon-links {
      margin-top: 18rem;
      font-size: 3em;
    }
  }
</style>

<script src="/memo/assets/vendor/parallax.min.js"></script>
<div id="scene" class="fullscreen">
  <div class="fullscreen" data-depth="-0.01">
    <div class="fullscreen center">
      <div id="my-head" style="margin-bottom: 15em;"></div>
    </div>
  </div>
  <div class="fullscreen" data-depth="-0.01">
    <div class="fullscreen center">
      <div class="title">Dr Yousef Amar</div>
    </div>
  </div>
  <div class="fullscreen" data-depth="0">
    <div class="fullscreen center">
      <div class="subtitle" style="margin-top: 5em;">CTO / Co-founder <a style="pointer-events: all;" href="https://krew.live" target="_top">Krew</a></div>
    </div>
  </div>
  <div class="fullscreen" data-depth="0">
    <div class="fullscreen center">
      <div class="icon-links">
        <a href="https://yousefamar.github.io/" target="_blank"><i class="fa-solid fa-address-card"></i></a>
        <a href="mailto:yousef@amar.io?Subject=Hello%2C%20Yousef!" target="_blank"><i class="fa-solid fa-envelope"></i></a>
        <a href="https://amar.io/meet/" target="_blank"><i class="fa-solid fa-calendar"></i></a>
        <a href="/memo/" target="_blank"><i class="fa-solid fa-database"></i></a>
        <a href="/memo/log/" target="_blank"><i class="fa-solid fa-rss"></i></a>
      </div>
    </div>
  </div>
</div>
<div class="vignette fullscreen"></div>
<script>
  const generateDots = (depth) => {
    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
    svg.setAttribute('width', '100%');
    svg.setAttribute('height', '100%');
    svg.setAttribute('viewBox', '0 0 10000 10000');
    svg.setAttribute('preserveAspectRatio', 'xMidYMid slice');
    for (let i = 0; i < 100; ++i) {
      const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
      const normalDist = (mean, std) => {
        let u = 0, v = 0;
        while (u === 0) u = Math.random();
        while (v === 0) v = Math.random();
        return mean + std * Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);
      };

      const theta = Math.random() * 2 * Math.PI;
      const x = (normalDist(0.9, 0.3) * Math.cos(theta) + 1) * 0.5 * 100;
      const y = (normalDist(0.9, 0.3) * Math.sin(theta) + 1) * 0.5 * 100;


      circle.setAttribute('cx', x + '%');
      circle.setAttribute('cy', y + '%');
      circle.setAttribute('r', (1 + depth * 4) + 'px');
      circle.setAttribute('fill', '#fff');
      // set opacity
      circle.setAttribute('opacity', depth * 0.1);
      svg.appendChild(circle);
    }
    return svg;
  };

  for (let i = 0; i < 5; ++i) {
    const outerDiv = document.createElement('div');
    outerDiv.setAttribute('class', 'fullscreen');
    outerDiv.setAttribute('data-depth', 0.1 + i * 0.1);

    const innerDiv = document.createElement('div');
    innerDiv.setAttribute('class', 'fullscreen center');
    const dots = generateDots(i + 1);
    innerDiv.appendChild(dots);
    outerDiv.appendChild(innerDiv);
    document.getElementById('scene').insertBefore(outerDiv, document.getElementById('scene').firstChild);
  }

  window.parallax = new Parallax(document.getElementById('scene'));
</script>

<script async src="/memo/assets/vendor/es-module-shims.js"></script>

<script type="importmap">
  {
    "imports": {
      "three": "/memo/assets/vendor/three.module.js"
    }
  }
</script>

<script type="module">
  import * as THREE from 'three';

  const camera = new THREE.PerspectiveCamera( 70, 1, 0.01, 10 );
  camera.position.z = 1;

  const scene = new THREE.Scene();

  const geometry = new THREE.PlaneGeometry(0.4, 0.4, 451, 451);
  const material = new THREE.MeshStandardMaterial({
    side: THREE.DoubleSide,
    transparent: true,
    map: new THREE.TextureLoader().load('/memo/assets/images/me-nobg.png'),
    displacementMap: new THREE.TextureLoader().load('/memo/assets/images/me-depth.png'),
  });

  const mesh = new THREE.Mesh(geometry, material);
  mesh.scale.set(1, 1, 0.1);
  scene.add(mesh);

  const light = new THREE.PointLight(0xffffff, 1, 100);
  light.position.set(0, 0, 1);
  scene.add(light);

  function animation(time) {
    mesh.rotation.x = window.parallax.inputY * 0.5;
    mesh.rotation.y = window.parallax.inputX * 0.5;
    renderer.render(scene, camera);
  }

  const renderer = new THREE.WebGLRenderer( { antialias: true, alpha: true } );
  renderer.setSize(500, 500);
  renderer.setAnimationLoop(animation);
  document.getElementById('my-head').appendChild(renderer.domElement);
</script>